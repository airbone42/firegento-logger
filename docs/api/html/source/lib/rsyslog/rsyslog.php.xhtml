<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of rsyslog.php</title><link rel="stylesheet" type="text/css" href="../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../classes.xhtml">Classes</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file rsyslog.php</h1><p>
                        Size: 2,838 Bytes - Last Modified: 2014-07-08T22:35:31+00:00</p><section><h2><small>/Users/datenbrille/Projects/magento.local/public/.modman/firegento-logger/src/lib/rsyslog/</small>rsyslog.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3"><pre><span class="token T_DOC_COMMENT">Copyright (c) 2013 Diego Zanella (http://dev.pathtoenlightenment.net)</span></pre></div><div id="line4"><br/></div><div id="line5"><pre><span class="token T_DOC_COMMENT">@package Remote SysLog</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT">@author Diego Zanella &lt;diego@pathtoenlightenment.net&gt;</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT">@copyright Copyright (c) 2013 Diego Zanella (http://dev.pathtoenlightenment.net)</span></pre></div><div id="line8"><pre><span class="token T_DOC_COMMENT">@license http://dev.pathtoenlightenment.net/noncommercial-licence/ Noncommercial Licence</span></pre></div><div id="line9"><pre><span class="token T_DOC_COMMENT">*/</span></pre></div><div id="line10"><br/></div><div id="line11"><pre><span class="token T_REQUIRE_ONCE">require_once</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'syslogfacility.php'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line12"><pre><span class="token T_REQUIRE_ONCE">require_once</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'syslogseverity.php'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line13"><pre><span class="token T_REQUIRE_ONCE">require_once</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'syslogmessage.php'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line14"><br/></div><div id="line15"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT"> * Sends SysLog messages to a Remote Server.</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line18"><pre><span class="token T_CLASS">class</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">RSyslog</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line19"><pre><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// @var Syslog destination server.</span></pre></div><div id="line20"><pre><span class="token T_WHITESPACE">  </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$LogServer</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line21"><pre><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// @var Port to use for communication. Standard syslog port is 514.</span></pre></div><div id="line22"><pre><span class="token T_WHITESPACE">  </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$Port</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">514</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line23"><pre><span class="token T_WHITESPACE">	</span><span class="token T_COMMENT">// @var Timeout of the UDP connection, in seconds.</span></pre></div><div id="line24"><pre><span class="token T_WHITESPACE">  </span><span class="token T_PRIVATE">private</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$Timeout</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line25"><br/></div><div id="line26"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT">	 * Class constructor.</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT">	 *</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT">	 * @param LogServer The Name or IP Address of the remote Log Server. It can be</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT">	 * indicated in format &lt;server&gt;[:&lt;port&gt;].</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT">	 * @param Timeout The timeout for the UDP connection, in seconds.</span></pre></div><div id="line32"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line33"><pre><span class="token T_WHITESPACE">  </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">__construct</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$LogServer</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$Timeout</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line34"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">SetLogServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$LogServer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line35"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">SetTimeout</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$Timeout</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line36"><pre><span class="token T_WHITESPACE">  </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line37"><br/></div><div id="line38"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT">	 * Setter for LogServer property.</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line41"><pre><span class="token T_WHITESPACE">  </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">SetLogServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$LogServer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line42"><pre><span class="token T_WHITESPACE">		</span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_EMPTY">empty</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$LogServer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line43"><pre><span class="token T_WHITESPACE">			</span><span class="token T_RETURN">return</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line44"><pre><span class="token T_WHITESPACE">		</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line45"><br/></div><div id="line46"><pre><span class="token T_WHITESPACE">		</span><span class="token T_COMMENT">// LogServer can be in format &lt;server&gt;:&lt;port&gt;</span></pre></div><div id="line47"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$LogServerParts</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">explode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">':'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$LogServer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line48"><br/></div><div id="line49"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">LogServer</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$LogServerParts</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line50"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">SetPort</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$LogServerParts</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line51"><pre><span class="token T_WHITESPACE">  </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line52"><br/></div><div id="line53"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line54"><pre><span class="token T_DOC_COMMENT">	 * Setter for Port property.</span></pre></div><div id="line55"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line56"><pre><span class="token T_WHITESPACE">  </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">SetPort</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$Port</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line57"><pre><span class="token T_WHITESPACE">    </span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_INT_CAST">(int)</span><span class="token T_VARIABLE">$Port</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_GT">&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_INT_CAST">(int)</span><span class="token T_VARIABLE">$Port</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_LT">&lt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">65536</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line58"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">Port</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_INT_CAST">(int)</span><span class="token T_VARIABLE">$Port</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line59"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line60"><pre><span class="token T_WHITESPACE">  </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line61"><br/></div><div id="line62"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line63"><pre><span class="token T_DOC_COMMENT">	 * Setter for Timeout property.</span></pre></div><div id="line64"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line65"><pre><span class="token T_WHITESPACE">  </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">SetTimeout</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$Timeout</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line66"><pre><span class="token T_WHITESPACE">    </span><span class="token T_IF">if</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_INT_CAST">(int)</span><span class="token T_VARIABLE">$Timeout</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_GT">&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line67"><pre><span class="token T_WHITESPACE">			</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">Timeout</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_INT_CAST">(int)</span><span class="token T_VARIABLE">$Timeout</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line68"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line69"><pre><span class="token T_WHITESPACE">  </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line70"><br/></div><div id="line71"><pre><span class="token T_WHITESPACE">	</span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line72"><pre><span class="token T_DOC_COMMENT">	 * Sends a Message to the remote Log Server.</span></pre></div><div id="line73"><pre><span class="token T_DOC_COMMENT">	 *</span></pre></div><div id="line74"><pre><span class="token T_DOC_COMMENT">	 * @param Message An instance of SyslogMessage class.</span></pre></div><div id="line75"><pre><span class="token T_DOC_COMMENT">	 * @param LogServer The Server to which the message will be sent. If omitted,</span></pre></div><div id="line76"><pre><span class="token T_DOC_COMMENT">	 * the one specified when the class was instantiated will be used instead. It</span></pre></div><div id="line77"><pre><span class="token T_DOC_COMMENT">	 * can be indicated as &lt;server&gt;[:&lt;port&gt;].</span></pre></div><div id="line78"><pre><span class="token T_DOC_COMMENT">	 * @param Timeout Timeout for the UDP Connection, in seconds. If omitted,</span></pre></div><div id="line79"><pre><span class="token T_DOC_COMMENT">	 * the one specified when the class was instantiated will be used instead.</span></pre></div><div id="line80"><pre><span class="token T_DOC_COMMENT">	 * @return True if the message was sent correctly. If not, an array containing</span></pre></div><div id="line81"><pre><span class="token T_DOC_COMMENT">	 * an Error Code and an Error Message.</span></pre></div><div id="line82"><pre><span class="token T_DOC_COMMENT">	 */</span></pre></div><div id="line83"><pre><span class="token T_WHITESPACE">  </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Send</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">SyslogMessage</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$Message</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$LogServer</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$Timeout</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line84"><pre><span class="token T_WHITESPACE">    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">SetLogServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$LogServer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line85"><pre><span class="token T_WHITESPACE">		</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">SetTimeout</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$Timeout</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line86"><br/></div><div id="line87"><pre><span class="token T_WHITESPACE">    </span><span class="token T_VARIABLE">$Socket</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">fsockopen</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">sprintf</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'udp://%s'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">LogServer</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">Port</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$ErrorNumber</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$ErrorMessage</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line88"><pre><span class="token T_WHITESPACE">    </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$Socket</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line89"><pre><span class="token T_WHITESPACE">			</span><span class="token T_FOREACH">foreach</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$Message</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">GetMessageChunks</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$MessageChunk</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line90"><pre><span class="token T_WHITESPACE">		    </span><span class="token T_STRING">fwrite</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$Socket</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$MessageChunk</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line91"><pre><span class="token T_WHITESPACE">			</span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line92"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_STRING">fclose</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$Socket</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line93"><pre><span class="token T_WHITESPACE">	    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line94"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line95"><pre><span class="token T_WHITESPACE">    </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line96"><pre><span class="token T_WHITESPACE">			</span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$ErrorNumber</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$ErrorMessage</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line97"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line98"><pre><span class="token T_WHITESPACE">  </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line99"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line100"><br/></div><div id="line101"><pre><span class="token T_COMMENT">//$Rsyslog = new RSyslog('logs.papertrailapp.com:22426');</span></pre></div><div id="line102"><br/></div></td></tr></table></section></div><footer><span/></footer></body></html>
